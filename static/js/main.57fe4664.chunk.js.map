{"version":3,"sources":["components/Location.js","components/WeatherDescription.js","components/FeelsLike.js","components/Temperature.js","components/SunSetRise.js","components/Icons.jsx","components/GetWeatherIcon.jsx","components/WeekChartLine.js","components/Utils.jsx","components/WeekChart.js","components/Datecomp.jsx","components/Chartcompo.js","components/Canvas.js","components/SettingsCanvas.js","components/CityList.jsx","services/Calls.js","GetWeather.jsx","components/CitySelector.js","components/ButtonBackPlus.jsx","App.js","serviceWorker.js","index.js","components/settingsIcon.svg"],"names":["Location","props","className","name","WeatherDescription","description","FeelsLike","feelsLike","Temperature","temp","SunSetRise","sunrise","sunset","Icons","icons","GetWeatherIcon","iconId","icoClass","console","log","WeekChartLine","day","temp_max","toFixed","temp_min","GetDay","timestamp","Date","toDateString","slice","WeekChart","data","cellSpacing","cellPadding","list","map","index","key","weather","icon","dt","main","Datecomp","useState","date","setDate","useEffect","timerID","setInterval","tick","clearInterval","format","Chartcompo","labels","e","temperatureDataset","cosa","datasets","label","barPercentage","barThickness","maxBarThickness","minBarLength","backgroundColor","borderSkipped","borderColor","options","legend","fontColor","scales","xAxes","display","gridLines","yAxes","Canvas","setData","convertTimestamp","d","mm","getMonth","getHours","loaded","style","h","toTimeString","split","join","start","city","toString","end","checkDigits","num","length","b","background","height","getDayColor","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","feels_like","SettingsCanvas","setCity","changeCity","addCity","cityCollection","search","setSearch","onSubmit","event","preventDefault","includes","type","placeholder","value","onChange","target","CityList","i","onClick","DeleteCity","axios","create","baseURL","process","timeout","callWeather","cityName","setLoaded","Calls","get","then","res","CitySelector","to","autoFocus","ButtonBackPlus","settingsPageActive","setSettingsPageActive","src","settingsIcon","alt","App","cityToDelete","indexOf","splice","id","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.57fe4664.chunk.js","sourcesContent":["import React from 'react'\nimport '../index.css'\n\nfunction Location(props) {\n\n  return (\n    <>\n        <p className=\"location\">{props.name}</p>\n    </>\n  )\n}\nexport default Location","import React from 'react'\n\nexport default function WeatherDescription(props) {\n  return (\n    <>\n      <p className=\"weather-desc\">{props.description}</p>\n    </>\n  )\n}\n","import React from 'react'\n\nexport default function FeelsLike(props) {\n  return (\n    <>\n      <p className=\"weather-desc\">Feels like {props.feelsLike}º</p>\n    </>\n  )\n}\n","import React from 'react'\nimport '../index.css'\n\nexport default function Temperature(props) {\n  return (\n      <div className=\"temperature-chart\" >\n        <p className=\"temperature\">{props.temp}<span className=\"degrees\">º</span></p>\n        {/* <div className=\"temperature-min-max\">\n          <p className=\"temperature\">{props.temp_max}º</p>\n          <p className=\"temperature\">{props.temp_min}º</p>\n        </div> */}\n      </div>\n  )\n}\n","import React from 'react'\n\nimport '../index.css'\n\n\nexport default function SunSetRise(props) {\n  return (\n    <div className=\"sun-desc\">\n        <p>Sunrise: {props.sunrise} · Sunset: {props.sunset}</p>        \n    </div>\n  )\n}\n","\nconst Icons = {\n  icons: {\n    '01d': 'wi wi-day-sunny',\n    '02d': 'wi wi-day-cloudy',\n    '03d': 'wi wi-cloudy',\n    '04d': 'wi wi-cloudy',\n    '09d': 'wi wi-showers',\n    '10d': 'wi wi-day-rain',\n    '11d': 'wi wi-day-thunderstorm',\n    '13d': 'wi wi-day-snow-thunderstorm',\n    '50d': 'wi wi-fog',\n    '01n': 'wi wi-day-sunny',\n    '02n': 'wi wi-day-cloudy',\n    '03n': 'wi wi-cloudy',\n    '04n': 'wi wi-cloudy',\n    '09n': 'wi wi-showers',\n    '10n': 'wi wi-day-rain',\n    '11n': 'wi wi-day-thunderstorm',\n    '13n': 'wi wi-day-snow-thunderstorm',\n    '50n': 'wi wi-fog',\n  },\n};\n\n\nexport default Icons\n\n\n\n// const IconChart = {\n//   wiowm200: \"thunderstorm\",\n//   wiowm201: \"thunderstorm\",\n//   wiowm202: \"thunderstorm\",\n//   wiowm210: \"lightning\",\n//   wiowm211: \"lightning\",\n//   wiowm212: \"lightning\",\n//   wiowm221: \"lightning\",\n//   wiowm230: \"thunderstorm\",\n//   wiowm231: \"thunderstorm\",\n//   wiowm232: \"thunderstorm\",\n//   wiowm300: \"sprinkle\",\n//   wiowm301: \"sprinkle\",\n//   wiowm302: \"rain\",\n//   wiowm310: \"rainmix\",\n//   wiowm311: \"rain\",\n//   wiowm312: \"rain\",\n//   wiowm313: \"showers\",\n//   wiowm314: \"rain\",\n//   wiowm321: \"sprinkle\",\n//   wiowm500: \"sprinkle\",\n//   wiowm501: \"rain\",\n//   wiowm502: \"rain\",\n//   wiowm503: \"rain\",\n//   wiowm504: \"rain\",\n//   wiowm511: \"rainmix\",\n//   wiowm520: \"showers\",\n//   wiowm521: \"showers\",\n//   wiowm522: \"showers\",\n//   wiowm531: \"stormshowers\",\n//   wiowm600: \"snow\",\n//   wiowm601: \"snow\",\n//   wiowm602: \"sleet\",\n//   wiowm611: \"rainmix\",\n//   wiowm612: \"rainmix\",\n//   wiowm615: \"rainmix\",\n//   wiowm616: \"rainmix\",\n//   wiowm620: \"rainmix\",\n//   wiowm621: \"snow\",\n//   wiowm622: \"snow\",\n//   wiowm701: \"showers\",\n//   wiowm711: \"smoke\",\n//   wiowm721: \"dayhaze\",\n//   wiowm731: \"dust\",\n//   wiowm741: \"fog\",\n//   wiowm761: \"dust\",\n//   wiowm762: \"dust\",\n//   wiowm771: \"cloudygusts\",\n//   wiowm781: \"tornado\",\n//   wiowm800: \"daysunny\",\n//   wiowm801: \"cloudygusts\",\n//   wiowm802: \"cloudygusts\",\n//   wiowm803: \"cloudygusts\",\n//   wiowm804: \"cloudy\",\n//   wiowm900: \"tornado\",\n//   wiowm901: \"stormshowers\",\n//   wiowm902: \"hurricane\",\n//   wiowm903: \"snowflakecold\",\n//   wiowm904: \"hot\",\n//   wiowm905: \"windy\",\n//   wiowm906: \"hail\",\n//   wiowm957: \"strongwind\",\n//   wiowmday200: \"daythunderstorm\",\n//   wiowmday201: \"daythunderstorm\",\n//   wiowmday202: \"daythunderstorm\",\n//   wiowmday210: \"daylightning\",\n//   wiowmday211: \"daylightning\",\n//   wiowmday212: \"daylightning\",\n//   wiowmday221: \"daylightning\",\n//   wiowmday230: \"daythunderstorm\",\n//   wiowmday231: \"daythunderstorm\",\n//   wiowmday232: \"daythunderstorm\",\n//   wiowmday300: \"daysprinkle\",\n//   wiowmday301: \"daysprinkle\",\n//   wiowmday302: \"dayrain\",\n//   wiowmday310: \"dayrain\",\n//   wiowmday311: \"dayrain\",\n//   wiowmday312: \"dayrain\",\n//   wiowmday313: \"dayrain\",\n//   wiowmday314: \"dayrain\",\n//   wiowmday321: \"daysprinkle\",\n//   wiowmday500: \"daysprinkle\",\n//   wiowmday501: \"dayrain\",\n//   wiowmday502: \"dayrain\",\n//   wiowmday503: \"dayrain\",\n//   wiowmday504: \"dayrain\",\n//   wiowmday511: \"dayrainmix\",\n//   wiowmday520: \"dayshowers\",\n//   wiowmday521: \"dayshowers\",\n//   wiowmday522: \"dayshowers\",\n//   wiowmday531: \"daystormshowers\",\n//   wiowmday600: \"daysnow\",\n//   wiowmday601: \"daysleet\",\n//   wiowmday602: \"daysnow\",\n//   wiowmday611: \"dayrainmix\",\n//   wiowmday612: \"dayrainmix\",\n//   wiowmday615: \"dayrainmix\",\n//   wiowmday616: \"dayrainmix\",\n//   wiowmday620: \"dayrainmix\",\n//   wiowmday621: \"daysnow\",\n//   wiowmday622: \"daysnow\",\n//   wiowmday701: \"dayshowers\",\n//   wiowmday711: \"smoke\",\n//   wiowmday721: \"dayhaze\",\n//   wiowmday731: \"dust\",\n//   wiowmday741: \"dayfog\",\n//   wiowmday761: \"dust\",\n//   wiowmday762: \"dust\",\n//   wiowmday781: \"tornado\",\n//   wiowmday800: \"daysunny\",\n//   wiowmday801: \"daycloudygusts\",\n//   wiowmday802: \"daycloudygusts\",\n//   wiowmday803: \"daycloudygusts\",\n//   wiowmday804: \"daysunnyovercast\",\n//   wiowmday900: \"tornado\",\n//   wiowmday902: \"hurricane\",\n//   wiowmday903: \"snowflakecold\",\n//   wiowmday904: \"hot\",\n//   wiowmday906: \"dayhail\",\n//   wiowmday957: \"strongwind\",\n//   wiowmnight200: \"nightaltthunderstorm\",\n//   wiowmnight201: \"nightaltthunderstorm\",\n//   wiowmnight202: \"nightaltthunderstorm\",\n//   wiowmnight210: \"nightaltlightning\",\n//   wiowmnight211: \"nightaltlightning\",\n//   wiowmnight212: \"nightaltlightning\",\n//   wiowmnight221: \"nightaltlightning\",\n//   wiowmnight230: \"nightaltthunderstorm\",\n//   wiowmnight231: \"nightaltthunderstorm\",\n//   wiowmnight232: \"nightaltthunderstorm\",\n//   wiowmnight300: \"nightaltsprinkle\",\n//   wiowmnight301: \"nightaltsprinkle\",\n//   wiowmnight302: \"nightaltrain\",\n//   wiowmnight310: \"nightaltrain\",\n//   wiowmnight311: \"nightaltrain\",\n//   wiowmnight312: \"nightaltrain\",\n//   wiowmnight313: \"nightaltrain\",\n//   wiowmnight314: \"nightaltrain\",\n//   wiowmnight321: \"nightaltsprinkle\",\n//   wiowmnight500: \"nightaltsprinkle\",\n//   wiowmnight501: \"nightaltrain\",\n//   wiowmnight502: \"nightaltrain\",\n//   wiowmnight503: \"nightaltrain\",\n//   wiowmnight504: \"nightaltrain\",\n//   wiowmnight511: \"nightaltrainmix\",\n//   wiowmnight520: \"nightaltshowers\",\n//   wiowmnight521: \"nightaltshowers\",\n//   wiowmnight522: \"nightaltshowers\",\n//   wiowmnight531: \"nightaltstormshowers\",\n//   wiowmnight600: \"nightaltsnow\",\n//   wiowmnight601: \"nightaltsleet\",\n//   wiowmnight602: \"nightaltsnow\",\n//   wiowmnight611: \"nightaltrainmix\",\n//   wiowmnight612: \"nightaltrainmix\",\n//   wiowmnight615: \"nightaltrainmix\",\n//   wiowmnight616: \"nightaltrainmix\",\n//   wiowmnight620: \"nightaltrainmix\",\n//   wiowmnight621: \"nightaltsnow\",\n//   wiowmnight622: \"nightaltsnow\",\n//   wiowmnight701: \"nightaltshowers\",\n//   wiowmnight711: \"smoke\",\n//   wiowmnight721: \"dayhaze\",\n//   wiowmnight731: \"dust\",\n//   wiowmnight741: \"nightfog\",\n//   wiowmnight761: \"dust\",\n//   wiowmnight762: \"dust\",\n//   wiowmnight781: \"tornado\",\n//   wiowmnight800: \"nightclear\",\n//   wiowmnight801: \"nightaltcloudygusts\",\n//   wiowmnight802: \"nightaltcloudygusts\",\n//   wiowmnight803: \"nightaltcloudygusts\",\n//   wiowmnight804: \"nightaltcloudy\",\n//   wiowmnight900: \"tornado\",\n//   wiowmnight902: \"hurricane\",\n//   wiowmnight903: \"snowflakecold\",\n//   wiowmnight904: \"hot\",\n//   wiowmnight906: \"nightalthail\",\n//   wiowmnight957: \"strongwind\"\n// }\n\n","import React from 'react'\nimport Icons from './Icons'\nimport './weather-icons.min.css'\n\nconst GetWeatherIcon = ({ iconId }) => {\n\n  if (!iconId) {\n    return 'na';\n  }\n\n  const icoClass = Icons.icons[iconId];\n  console.log(Icons.icons[iconId]);\n  \n  if (icoClass) {\n    return <i className={icoClass}></i> ;\n  }\n  \n  return 'na';\n}\n\nexport default GetWeatherIcon\n\n","import React from 'react'\nimport GetWeatherIcon from './GetWeatherIcon'\nimport '../index.css'\n\nconst WeekChartLine = (props) => {\n  return (\n    <>\n      <tr>\n        <td className=\"day-chart\">{props.day}</td>\n        {/* <td className=\"temp-chart\">{props.temp.toFixed(0)}º</td> */}\n        <td className=\"icon-chart\"><GetWeatherIcon iconId={props.iconId} /></td>\n        <td className=\"max-chart\">{props.temp_max.toFixed(0)}º</td>\n        <td className=\"min-chart\">{props.temp_min.toFixed(0)}º</td>\n      </tr>\n    </>\n  )\n}\n\nexport default WeekChartLine\n"," \n\nexport const GetDay = timestamp => {\n  let d = new Date(timestamp * 1000) // Convert the passed timestamp to milliseconds\n  let dd = (d.toDateString()).slice(0, 3);         // Add leading 0.\n  return dd;\n}","import React from 'react'\nimport WeekChartLine from './WeekChartLine'\nimport {GetDay} from './Utils'\nimport '../index.css'\n\nconst WeekChart = ({ data }) => {\n\n  const dayIndexToDisplay = 6;\n  return (\n    <div>\n      <table cellSpacing=\"0\" cellPadding=\"0\" className=\"week-chart\">\n        <tbody>\n          {data.list.map((day, index) => {\n            if (index % dayIndexToDisplay === 0) {\n              return <WeekChartLine key={index} iconId={day.weather[0].icon} day={GetDay(day.dt)} temp={day.main.temp} temp_max={day.main.temp_max} temp_min={day.main.temp_min} />\n            }\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default WeekChart","import React, { useState, useEffect } from 'react'\nimport Moment from 'react-moment'\n\nconst Datecomp = (props) => {\n  const [date, setDate] = useState(new Date());\n\n  useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  const tick = () => {\n    setDate(new Date());\n  }\n\n  return (\n    <>\n      <Moment className='weather-desc' format='MMMM Do YYYY'></Moment>\n      <Moment className='weather-desc' format='hh:mm:ss'>{date}</Moment>\n    </>\n  )\n}\n\nexport default Datecomp","import React from 'react'\nimport { GetDay } from './Utils'\nimport { Doughnut, Bar } from 'react-chartjs-2';\n\nconst Chartcompo = ({ data }) => {\n  const labels = data.list.map(e => GetDay(e.main.dt));\n  const temperatureDataset = data.list.map(e => e.main.temp);\n\n  console.log(temperatureDataset);\n  const cosa = {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Forecast',\n        barPercentage: 0.5,\n        barThickness: 3,\n        maxBarThickness: 8,\n        minBarLength: 2,\n        backgroundColor: 'white',\n        borderSkipped: 'top',\n        borderColor: 'white',\n        data: temperatureDataset\n      }\n    ],\n    options: {\n      legend: {\n        labels: {\n          // This more specific font property overrides the global property\n          fontColor: 'white'\n        },\n        scales: {\n          xAxes: [{\n            display: true,\n            gridLines: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            display: true,\n            gridLines: {\n              display: false\n            }\n          }]\n        }\n      }\n    }\n  }\n\n\n\n\n  return (\n    <>\n      <Bar data={cosa} />\n    </>\n  )\n}\n\nexport default Chartcompo","import React, { useState, useEffect } from 'react';\nimport Location from './Location'\nimport WeatherDescription from './WeatherDescription'\nimport FeelsLike from './FeelsLike'\nimport Temperature from './Temperature'\nimport SunSetRise from './SunSetRise'\n// import AnimationOfWeather from './AnimationOfWeather'\nimport WeekChart from './WeekChart'\nimport Datecomp from './Datecomp'\nimport Chartcompo from './Chartcompo'\nimport '../index.css'\nimport { CSSTransitionGroup } from 'react-transition-group' // ES6\n\nconst Canvas = (props) => {\n  const [data, setData] = useState(props.data)\n\n  useEffect(() => {\n    setData(props.data)\n  }, []);\n\n  const convertTimestamp = timestamp => {\n    var d = new Date(timestamp * 1000), // Convert the passed timestamp to milliseconds\n      mm = ('0' + (d.getMonth() + 1)).slice(-2),  // Months are zero based. Add leading 0.\n      hh = d.getHours(),\n      timehhmm = hh + ':' + mm;\n    return timehhmm;\n  }\n\n  const getDayColor = () => {\n    //clear sky: #409cff\n    //high noon: fffffb\n    //snow: #ddddd\n    //rainy: 6d6d6d\n    //overcast: #c9e2ff\n\n    let time = new Date().toTimeString().slice(0, 9).split(':').join('');\n    let h = time.slice(0, 4)// light map to sunset and sunrise 0 to 23\n\n    let start = convertTimestamp(props.data.city.sunrise).toString().slice(0, 9).split(':').join('');\n    let end = convertTimestamp(props.data.city.sunset).toString().slice(0, 9).split(':').join('');\n\n\n    const checkDigits = (num) => {\n      if (num.toString().length < 4) {\n        return '0' + num\n      } else {\n        return num;\n      }\n    }\n\n    start = checkDigits(start);\n    end = checkDigits(end);\n\n\n    let b = 0\n    if (h >= start && h <= end) {\n      h = 190\n      b = 250\n    } else {\n      h = \"30\";\n      b = \"40\"\n    }\n    let mediaHex = h.toString(16) + h.toString(16) + (b).toString(16);\n    let numTime = 'linear-gradient(#' + mediaHex + ',#333)';\n\n    const divStyle = {\n      background: numTime,\n      height: \"80vh\"\n    };\n    return divStyle;\n  }\n\n\n  return (\n    <>\n      {props.loaded &&\n        (<>\n          <div className=\"weather-canvas\" style={getDayColor()}>\n            <div className=\"details\">\n              <CSSTransitionGroup\n                transitionName=\"example\"\n                transitionAppear={true}\n                transitionAppearTimeout={4000}\n                transitionEnter={false}\n                transitionLeave={false}>\n                <Location name={data.city.name} />\n                <Datecomp date={data.list[0].dt} />\n                <WeatherDescription description={data.list[0].weather[0].description} />\n                <Temperature temp={data.list[0].main.temp.toFixed(0)} temp_max={data.list[0].main.temp_max.toFixed(0)} temp_min={data.list[0].main.temp_min.toFixed(0)} />\n                <FeelsLike feelsLike={data.list[0].main.feels_like.toFixed(0)} />\n                {/* <AnimationOfWeather /> */}\n                <SunSetRise sunset={convertTimestamp(data.city.sunset)} sunrise={convertTimestamp(data.city.sunrise)} />\n              </CSSTransitionGroup>\n            </div>\n            <div className=\"chart\">\n            <Chartcompo data={data}/>\n            </div>\n            <div className=\"table\">\n              <WeekChart data={data} />\n            </div>\n          </div>\n        </>)\n      }\n    </>\n  )\n}\nexport default Canvas","import React, { useState } from 'react';\nimport '../index.css';\n\nfunction SettingsCanvas({ setCity, changeCity, addCity, cityCollection }) {\nconst [search,setSearch] = useState(\"\")\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    (!cityCollection.includes(search)) &&\n      addCity(cityCollection => [...cityCollection, search]);\n    changeCity(search);\n    setCity(\"\")\n  }\n\n\n  return (\n    <>\n      <div >\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" placeholder=\"enter your city\"\n            name=\"name\" value={search} onChange={e => setSearch(e.target.value)} />\n          <input type=\"submit\" value=\"+\" />\n        </form>\n      </div>\n    </>\n  )\n}\n\nexport default SettingsCanvas\n","import React from 'react'\nimport '../index.css';\n\nconst CityList = (props) => {\n  return (\n    <>\n      <ul className=\"delete-list\">\n        {props.cityCollection.map((e, i) => {\n          return (\n            <li className=\"delete-bar\"key={i}>\n              <p>{e}</p>\n              {props.cityCollection.length > 1 &&\n                <button onClick={() => { props.DeleteCity(e) }}><p>Delete</p></button>\n              }\n            </li>\n          )\n        })}\n      </ul>\n    </>\n  )\n}\n\nexport default CityList\n","import axios from 'axios'\n\n// console.warn(process.env.REACT_APP_ENDPOINT)\n// console.warn(process.env.REACT_APP_URL)\n\nexport default axios.create({\n    baseURL: process.env.REACT_APP_URL,\n    timeout: 60000\n})\n","import Calls from './services/Calls'\n\nexport const callWeather = (cityName,setData,setLoaded) => {\n  Calls.get(`/data/2.5/forecast?q=${cityName}&cnt=40&units=metric&appid=${process.env.REACT_APP_ENDPOINT}`)\n    // Calls.get(`/data/2.5/forecast/daily?lat=35&lon=139&cnt=10&appid=${process.env.REACT_APP_ENDPOINT}`)\n    .then(res => {\n      console.log(\"'calling: \", res.data);\n      setData(res.data);\n      res.data.list ? (setLoaded(true)) : (setLoaded(false));\n    })\n}\n\nexport const callCurrentSpotWeather = (coors,setData,setLoaded) => {\n  const { latitude, longitude } = coors;\n\n  // Calls.get(`/data/2.5/forecast?q=${cityName}&cnt=40&units=metric&appid=${process.env.REACT_APP_ENDPOINT}`)\n  Calls.get(`/data/2.5/forecast/daily?lat=${latitude}&lon=${longitude}&cnt=10&appid=${process.env.REACT_APP_ENDPOINT}`)\n    .then(res => {\n      console.log(\"'calling: \", res.data.city);\n      setData(res.data);\n      res.data.list ? (setLoaded(true)) : (setLoaded(false));\n    })\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst CitySelector = ({changeCity,cityCollection}) => {\n  return (\n    <>\n      {cityCollection.map((cityName, i) => {\n        return (\n          <li key={i}>\n            <Link to=\"/\">\n            <button autoFocus onClick={() => {\n              changeCity(cityName);\n            }}>{cityName}</button>\n            </Link>\n          </li >\n        )\n      })}\n    </>\n  )\n}\n\nexport default CitySelector","import React from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\nimport settingsIcon from './settingsIcon.svg'; \n\nconst ButtonBackPlus = (props) => {\n\n\nreturn (\n  <>\n    {props.settingsPageActive ? \n    <Link onClick={()=>props.setSettingsPageActive(false)} to=\"/\"><img src={settingsIcon} alt=\"settingsIcon\"/></Link>\n    :\n    <Link onClick={()=>props.setSettingsPageActive(true)} to=\"/settings\"><img src={settingsIcon} alt=\"settingsIcon\"/></Link>\n    }\n  </>\n)\n}\n\nexport default ButtonBackPlus\n","import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Canvas from './components/Canvas'\nimport SettingsCanvas from './components/SettingsCanvas';\nimport CityList from './components/CityList';\nimport {callWeather,callCurrentSpotWeather} from './GetWeather'\nimport CitySelector from './components/CitySelector'\nimport ButtonBackPlus from './components/ButtonBackPlus'\n// import GeolocationWidget from './components/GeolocationWidget'\nimport './index.css'\n\n\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [cityCollection, addCity] = useState([\"Barcelona\"])\n  const [city, setCity] = useState(\"Barcelona\");\n  const [settingsPageActive, setSettingsPageActive] = useState(false);\n  const [coordinates, setCoordinates] = useState(null)\n\n\n  useEffect(() => {\n    callWeather(city,setData,setLoaded)\n  }, []);\n\n  const changeCity = (cityName) => {\n    setCity(cityName);\n    callWeather(cityName,setData,setLoaded);\n    setSettingsPageActive(false);\n  }\n\n  const DeleteCity = (cityToDelete) => {\n    let i = cityCollection.indexOf(cityToDelete);\n    cityCollection.splice(i, 1);\n    addCity(cityCollection);\n    changeCity(cityCollection[cityCollection.length - 1])\n  }\n\n\n\n  const setSettingsPage = () => {\n    settingsPageActive ? setSettingsPageActive(false) : setSettingsPageActive(true)\n  }\n\n  const setCoordinatesAndShowWeather = (coors) => {\n    setCoordinates(coors);\n    console.log(coors);\n    callCurrentSpotWeather(coors,setData,setLoaded);\n  }\n\n  return (\n    <>\n      <Router>\n        <nav>\n          <div id=\"search-widget\">\n            {/* <GeolocationWidget setCoordinates={setCoordinates} setCoordinatesAndShowWeather={setCoordinatesAndShowWeather}/> */}\n            <SettingsCanvas setCity={setCity} changeCity={changeCity} addCity={addCity} cityCollection={cityCollection} />\n            <ButtonBackPlus setSettingsPageActive={setSettingsPageActive} settingsPageActive={settingsPageActive} />\n          </div>\n          <ul>\n            <CitySelector changeCity={changeCity} cityCollection={cityCollection} />\n            <li>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route exact path=\"/settings\" component={() => <CityList cityCollection={cityCollection} DeleteCity={DeleteCity} />} />\n          <Route exact path=\"/\" component={() => <Canvas data={data} loaded={loaded} cityCollection={cityCollection} callWeather={callWeather} changeCity={changeCity} setCity={setCity} />} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/settingsIcon.4b9f9cf2.svg\";"],"sourceRoot":""}